-#    This file is part of Monzo-Viewer.

-#    Monzo-Viewer is free software: you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation, either version 3 of the License, or
-#    any later version.

-#    Monzo-Viewer is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.

-#    You should have received a copy of the GNU General Public License
-#    along with Monzo-Viewer.  If not, see <https://www.gnu.org/licenses/>.

= render "nav"
.container
    .row
        .col
            .jumbotron
                %h1.display-4
                    Settings
                %p= link_to "Re-run Account Authorisation (incase the app becomes deauthorised)", dev_portal_path, class: "text-secondary"
                %hr.my-4
                - @accounts.each_with_index do |account, i|
                    %h4 #{account.name}
                    %p
                        Savings Pot: 
                        %select.form-control.savings-pot{"data-account" => account.id, "id" => "savings-pot#{i}", "data-number" => i}
                            = options_for_select @pots[account.id], "#{account.savings}"
                    %p
                        Amount to leave on transfer: £ 
                        = number_field_tag "threshold_leave"+i.to_s, number_to_currency(@threshold_offset[account.id]/100.0, unit: "", delimiter: ""), step: 0.01, min: 0, class: "form-control savings-pot", "data-number": "#{i}"
                    - if @transfer_conditions[account.id].count == 0
                        %h6 No conditions set, no money will be transfered automatically
                    - else
                        %h6 Money will be automatically tansferred when all of the following conditions are satisfied

                    %ul
                        - @transfer_conditions[account.id].each do |condition|
                            - if condition.amount
                                %li
                                    Transaction value is at least #{number_to_currency(condition.condition.to_i/100.0, unit: "£")}
                                    = link_to "clear", delete_pot_condition_path(account.id, condition.id), class: "material-icons text-danger", method: :delete
                            - else
                                %li
                                    Transaction description includes #{condition.condition}
                                    = link_to "clear", delete_pot_condition_path(account.id, condition.id), class: "material-icons text-danger", method: :delete
                    
                    %h6 Add a new condition
                    %p
                        = form_with(url: create_pot_condition_path(account.id), local: true) do |form|
                            .form-group.form-check
                                = form.check_box "amount#{account.id}", class: "form-check-input"
                                = form.label "amount#{account.id}", "Based on transaction value?", class: "form-check-label", "data-toggle" => "tooltip", "title" => "Tick this box if this condition is based on the value of the transaction, or leave it unchecked if its based on the description of the transaction"
                            .form-group
                                = form.text_field "target#{account.id}", placeholder: "Minumum amount (in £'s) or Description text", class: "form-control", "data-toggle" => "tooltip", "title" => "If the condition is based on the description, it will match anything in the description before and after this condition"
                            .form-group
                                = form.submit "Add condition", class: "btn btn-primary"
                    %hr.my-4
                = link_to "Update Accounts", update_accounts_path, class: "btn btn-primary btn-lg"
